// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistracijaVozila.Data;

#nullable disable

namespace RegistracijaVozila.Migrations
{
    [DbContext(typeof(RegistracijaVozilaDbContext))]
    partial class RegistracijaVozilaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.Klijent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojLicneKarte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Klijenti");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.MarkaVozila", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TipVozilaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TipVozilaId");

                    b.ToTable("MarkeVozila");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.ModelVozila", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MarkaVozilaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MarkaVozilaId");

                    b.ToTable("ModeliVozila");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.Osiguranje", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipOsiguranja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Osiguranja");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.OsiguranjeRegistracija", b =>
                {
                    b.Property<Guid>("RegistracijaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OsiguranjeVozilaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RegistracijaId", "OsiguranjeVozilaId");

                    b.HasIndex("OsiguranjeVozilaId");

                    b.ToTable("OsiguranjeRegistracija");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.Registracija", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("CijenaRegistracije")
                        .HasColumnType("real");

                    b.Property<DateTime>("DatumIstekaRegistracije")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("KlijentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("PrivremenaRegistracija")
                        .HasColumnType("bit");

                    b.Property<Guid>("VoziloId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("KlijentId");

                    b.HasIndex("VoziloId")
                        .IsUnique();

                    b.ToTable("Registracije");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.TipVozila", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoviVozila");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.Vozilo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrojSasije")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumPrveRegistracije")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime2");

                    b.Property<int>("GodinaProizvodnje")
                        .HasColumnType("int");

                    b.Property<Guid>("MarkaVozilaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Masa")
                        .HasColumnType("real");

                    b.Property<Guid>("ModelVozilaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RegistarskaOznaka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SnagaMotora")
                        .HasColumnType("int");

                    b.Property<Guid>("TipVozilaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VrstaGoriva")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ZapreminaMotora")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MarkaVozilaId");

                    b.HasIndex("ModelVozilaId");

                    b.HasIndex("TipVozilaId");

                    b.ToTable("Vozila");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.MarkaVozila", b =>
                {
                    b.HasOne("RegistracijaVozila.Models.Domain.TipVozila", "TipVozila")
                        .WithMany("Marke")
                        .HasForeignKey("TipVozilaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipVozila");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.ModelVozila", b =>
                {
                    b.HasOne("RegistracijaVozila.Models.Domain.MarkaVozila", "MarkaVozila")
                        .WithMany("Modeli")
                        .HasForeignKey("MarkaVozilaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MarkaVozila");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.OsiguranjeRegistracija", b =>
                {
                    b.HasOne("RegistracijaVozila.Models.Domain.Osiguranje", "Osiguranje")
                        .WithMany("OsiguranjeRegistracija")
                        .HasForeignKey("OsiguranjeVozilaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegistracijaVozila.Models.Domain.Registracija", "Registracija")
                        .WithMany("OsiguranjeRegistracija")
                        .HasForeignKey("RegistracijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Osiguranje");

                    b.Navigation("Registracija");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.Registracija", b =>
                {
                    b.HasOne("RegistracijaVozila.Models.Domain.Klijent", "Vlasnik")
                        .WithMany("Registracije")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegistracijaVozila.Models.Domain.Vozilo", "Vozilo")
                        .WithOne("Registracija")
                        .HasForeignKey("RegistracijaVozila.Models.Domain.Registracija", "VoziloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vlasnik");

                    b.Navigation("Vozilo");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.Vozilo", b =>
                {
                    b.HasOne("RegistracijaVozila.Models.Domain.MarkaVozila", "MarkaVozila")
                        .WithMany()
                        .HasForeignKey("MarkaVozilaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RegistracijaVozila.Models.Domain.ModelVozila", "ModelVozila")
                        .WithMany()
                        .HasForeignKey("ModelVozilaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("RegistracijaVozila.Models.Domain.TipVozila", "TipVozila")
                        .WithMany()
                        .HasForeignKey("TipVozilaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MarkaVozila");

                    b.Navigation("ModelVozila");

                    b.Navigation("TipVozila");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.Klijent", b =>
                {
                    b.Navigation("Registracije");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.MarkaVozila", b =>
                {
                    b.Navigation("Modeli");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.Osiguranje", b =>
                {
                    b.Navigation("OsiguranjeRegistracija");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.Registracija", b =>
                {
                    b.Navigation("OsiguranjeRegistracija");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.TipVozila", b =>
                {
                    b.Navigation("Marke");
                });

            modelBuilder.Entity("RegistracijaVozila.Models.Domain.Vozilo", b =>
                {
                    b.Navigation("Registracija")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
